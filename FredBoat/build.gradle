apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'com.sedmelluq.jdaction'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'org.springframework.boot'

description = 'FredBoat Discord Music Bot'
mainClassName = "fredboat.main.Launcher"
version = rootProject.version
ext {
    moduleName = 'FredBoat'
}

bootRun {
    //compiling tests during bootRun increases the likelyhood of catching broken tests locally instead of on the CI
    dependsOn compileTestJava

    //pass in custom jvm args
    // source: https://stackoverflow.com/a/25079415
    // example: ./gradlew bootRun -PjvmArgs="--illegal-access=debug -Dwhatever=value"
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}

bootJar {
    archiveName = "FredBoat.jar"
    doLast {
        //copies the jar into a place where the Dockerfile can find it easily (and users maybe too)
        copy {
            from 'build/libs/FredBoat.jar'
            into '.'
        }
    }
}

dependencies {
    compile project(':Shared')
    compile project(':Database')
    compile group: 'net.dv8tion', name: 'JDA', version: jdaVersion
    compile group: 'com.sedmelluq', name: 'lavaplayer', version: lavaplayerVersion
    compile group: 'com.sedmelluq', name: 'jda-nas', version: jdaNasVersion

    if (System.getenv('dev') == 'true') {
        compile(group: 'lavalink', name: 'Lavalink-Client', version: '-SNAPSHOT')
    } else {
        //production
        compile(group: 'com.github.Frederikam.Lavalink', name: 'Lavalink-Client', version: lavalinkVersion)
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion
    compile group: 'com.sparkjava', name: 'spark-core', version: sparkVersion
    compile group: 'it.unimi.dsi', name: 'fastutil', version: fastUtilVersion

    compile group: 'org.togglz', name: 'togglz-core', version: togglzVersion
    compile group: 'com.google.guava', name: 'guava', version: guavaVersion
    compile group: 'com.github.vladimir-bukhtoyarov', name: 'bucket4j-core', version: bucket4jVersion

    //tests
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    // To avoid compiler warnings about @API annotations in JUnit code.
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: apiGuardianVersion
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    optional group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion
}

//required by spring boot configuration processor
compileJava.dependsOn(processResources)

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    //inject values into app.properties
    filesMatching("**/app.properties") {
        filter ReplaceTokens, tokens: [
                "project.version"   : project.version,
                "project.groupId"   : project.group,
                "project.artifactId": project.ext.moduleName,
                "env.BUILD_NUMBER"  : (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'DEV')
        ]
    }
}
